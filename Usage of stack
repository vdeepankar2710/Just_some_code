#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define MAX 100001
#define MOD 1000000007
// #define MOD 998244353
#define pb push_back
#define F first
#define S second
#define INF 2e18
#define PII pair<int,int>
#define PLL pair<long long, long long>

const int N = 10*MAX;

// int left[N], right[N], jump_ri[N], jump_le[N];

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t; cin>>t;
    while(t--)
    {
		int n; cin>>n;
		int h[n];
		for(int i=0; i<n; i++)
		cin>>h[i];
		int right[n] = {0}, left[n] = {0}, jump_ri[n], jump_le[n];
		
		for(int i=0; i<n; i++)
		{
			jump_ri[i] = jump_le[i] = -1;
		}
		
		stack<PII> s;
	
		for(int i=0; i<n; i++)
		{
			while(!s.empty() && h[i]>s.top().F)
			{
				s.pop();
			}
			if(!s.empty())
			jump_le[i] = s.top().S;
			else
			jump_le[i] = -1;
			
			s.push({h[i], i});
			
			if(jump_le[i] == -1 || h[i] < h[jump_le[i]])
			{
				left[i] = 0;
			}
			else 
			left[i] = 1 + left[jump_le[i]];
			
		}
		
		while(!s.empty())	s.pop();
		
		for(int i=n-1; i>=0; i--)
		{
			while(!s.empty() && h[i]>s.top().F)
			{
				s.pop();
			}
			if(!s.empty())
			jump_ri[i] = s.top().S;
			else
			jump_ri[i] = -1;
			
			s.push({h[i], i});
			
			if(jump_ri[i] == -1 || h[i] < h[jump_ri[i]])
			{
				right[i] = 0;
			}
			else 
			right[i] = 1 + right[jump_ri[i]];
			
		}
		
		for(int i=0; i<n; i++)
		cout<<left[i] + right[i]<<" ";
		cout<<'\n';
		
    }
	
    
    return 0;
}

//problem link - https://www.codechef.com/LTIME94C/problems/LUNCHTIM
//sample input  - 1
//5
//1 2 2 3 2
